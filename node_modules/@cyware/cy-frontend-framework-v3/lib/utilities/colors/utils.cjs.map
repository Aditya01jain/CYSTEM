{"version":3,"file":"utils.cjs","sources":["../../../src/utilities/colors/utils.ts"],"sourcesContent":["import colors from \"./index.ts\";\n\nfunction shadeColor(color: string, percent = 0.2): string {\n  const num = parseInt(color.slice(1), 16);\n  const amt = Math.round(2.55 * percent);\n  const R = (num >> 16) + amt,\n    G = ((num >> 8) & 0x00ff) + amt,\n    B = (num & 0x0000ff) + amt;\n  return `rgba(${R},${G},${B},${percent})`;\n}\n\nfunction getRgbByIndex(index: number, percent: number = 1): string {\n  return shadeColor(getColorByIndex(index), percent);\n}\n\nfunction getColorByIndex(key: number | string, type = \"default\") {\n  const record: Record<string, any> = colors[type];\n  if (type === \"default\" && typeof key === \"number\") {\n    return record[key % record.length];\n  }\n  return record?.[key];\n}\n\nexport { getColorByIndex, shadeColor, getRgbByIndex };\n"],"names":["shadeColor","color","percent","num","amt","R","G","B","getRgbByIndex","index","getColorByIndex","key","type","record","colors"],"mappings":"+GAEA,SAASA,EAAWC,EAAeC,EAAU,GAAa,CACxD,MAAMC,EAAM,SAASF,EAAM,MAAM,CAAC,EAAG,EAAE,EACjCG,EAAM,KAAK,MAAM,KAAOF,CAAO,EAC/BG,GAAKF,GAAO,IAAMC,EACtBE,GAAMH,GAAO,EAAK,KAAUC,EAC5BG,GAAKJ,EAAM,KAAYC,EACzB,MAAO,QAAQC,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIL,CAAO,GACvC,CAEA,SAASM,EAAcC,EAAeP,EAAkB,EAAW,CACjE,OAAOF,EAAWU,EAAgBD,CAAK,EAAGP,CAAO,CACnD,CAEA,SAASQ,EAAgBC,EAAsBC,EAAO,UAAW,CACzD,MAAAC,EAA8BC,UAAOF,CAAI,EAC/C,OAAIA,IAAS,WAAa,OAAOD,GAAQ,SAChCE,EAAOF,EAAME,EAAO,MAAM,EAE5BA,IAASF,CAAG,CACrB"}