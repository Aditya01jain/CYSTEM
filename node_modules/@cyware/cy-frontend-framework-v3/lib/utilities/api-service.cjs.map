{"version":3,"file":"api-service.cjs","sources":["../../src/utilities/api-service.ts"],"sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst DEFAULT_CONTENT_TYPE = \"application/json\";\n\ntype InstanceProps = {\n  baseUrl: string;\n  slug: string;\n  tokenKey?: string;\n  token?: string;\n  tokenPrefix?: string;\n};\n\ntype HttpProps = {\n  apiServices: Record<string, InstanceProps>;\n  tokenPrefix: string;\n  config?: Record<string, any>;\n};\n\nconst onSuccess = (\n  component: string,\n  res: any,\n  callback?: Function | null,\n  instance?: Record<string, any>\n) => {\n  const data = {\n    status: true,\n    data: res.data,\n    code: res.status,\n    component: component,\n    instance\n  };\n  if (callback) callback(data);\n  return data;\n};\n\nconst onError = (\n  component: string,\n  error: any,\n  callback?: Function | null,\n  instance?: Record<string, any>\n) => {\n  const data = {\n    status: false,\n    error: error?.response?.data,\n    code: error?.response?.status || 502,\n    component: component,\n    instance,\n    isCancelled: axios.isCancel(error)\n  };\n  if (callback) callback(data);\n  return Promise.reject(data);\n};\n\nconst getAuthDetails = (authData: InstanceProps) => {\n  const token = authData.tokenKey\n    ? Cookies.get(authData.tokenKey)\n    : authData.token;\n  const baseURL = authData.baseUrl + authData.slug;\n  return { baseURL, token };\n};\n\nconst $http = () => {\n  return axios.create({\n    paramsSerializer: (params) => new URLSearchParams(params).toString(),\n    allowAbsoluteUrls: true,\n    headers: {\n      Accept: DEFAULT_CONTENT_TYPE,\n      \"Content-Type\": DEFAULT_CONTENT_TYPE\n    }\n  });\n};\n\nconst request = (props: HttpProps, callback?: Function | null) => {\n  const api = $http();\n  let apiServices: Record<string, any> = props.apiServices;\n\n  const buildURL = (component: string, id?: string, instance?: string) => {\n    const { service, componentSlug } = setService(component, instance);\n    if (props.config?.[service]) {\n      let url = props.config[service]?.[componentSlug]?.api || componentSlug;\n      if (id) {\n        url += `${id}/`;\n      }\n      return url;\n    } else {\n      return componentSlug;\n    }\n  };\n\n  const setService = (component: string, instance?: string) => {\n    const findService: Array<string> = component?.split(\".\");\n    if (findService.length > 1) {\n      setConfig(apiServices[instance || findService[0]]);\n      return { service: findService[0], componentSlug: findService[1] };\n    }\n    return { componentSlug: component, service: \"\" };\n  };\n\n  const setConfig = (service: InstanceProps) => {\n    const { baseURL, token } = getAuthDetails(service);\n    api.defaults.baseURL = baseURL;\n    api.defaults.headers.Authorization = `${service.tokenPrefix || props.tokenPrefix} ${token}`;\n  };\n\n  return {\n    get: function (component: string, options?: Record<string, any>) {\n      return api\n        .get(buildURL(component, options?.id, options?.instance), options)\n        .then((res: any) => onSuccess(component, res, callback, this))\n        .catch((error: any) => onError(component, error, callback, this));\n    },\n    post: function (\n      component: string,\n      payload: object,\n      options?: Record<string, any>\n    ) {\n      return api\n        .post(\n          buildURL(component, options?.id, options?.instance),\n          payload,\n          options\n        )\n        .then((res: any) => onSuccess(component, res, callback, this))\n        .catch((error: any) => onError(component, error, callback, this));\n    },\n    put: function (\n      component: string,\n      payload: object,\n      options?: Record<string, any>\n    ) {\n      return api\n        .put(buildURL(component, options?.id, options?.instance), payload)\n        .then((res: any) => onSuccess(component, res, callback, this))\n        .catch((error: any) => onError(component, error, callback, this));\n    },\n    delete: function (component: string, options?: Record<string, any>) {\n      return api\n        .delete(buildURL(component, options?.id, options?.instance), options)\n        .then((res: any) => onSuccess(component, res, callback, this))\n        .catch((error: any) => onError(component, error, callback, this));\n    },\n    appendServices: function (services: Record<string, any>) {\n      apiServices = { ...apiServices, ...services };\n    },\n    updateService: function (service: string, data: Record<string, any>) {\n      const update = { ...apiServices[service], ...data };\n      this.appendServices({ [service]: update });\n    },\n    services: () => apiServices,\n    appendConfig: function (config: Record<string, any>) {\n      props.config = { ...props.config, ...config };\n    },\n    appendCallback: (func: Function) => {\n      callback = func;\n    }\n  };\n};\n\nexport default request;\n"],"names":["DEFAULT_CONTENT_TYPE","onSuccess","component","res","callback","instance","data","onError","error","axios","getAuthDetails","authData","token","Cookies","$http","params","request","props","api","apiServices","buildURL","id","service","componentSlug","setService","url","findService","setConfig","baseURL","options","payload","services","update","config","func"],"mappings":"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"}