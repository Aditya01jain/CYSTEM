{"version":3,"file":"index.cjs","sources":["../../../src/directives/telemetry/index.js"],"sourcesContent":["import telemetry from \"mixpanel-browser\";\nimport OfflineQueue from './models/OfflineQueue';\nimport AsyncHandler from './models/AsyncHandler';\n\n/*\n  appKey: (String) Telemetry key,\n  isEnabled: boolean(Telemetry enabled or disabled),\n  client: String(Tenant Name),\n  user: String(User ID),\n  pattern: String( Ex: 'section:subsection:module:submodule:type:subtype:event:subevent')\n  limit: Number\n  eventPrefix: String\n */\n\nlet isTelemetryLoaded = false;\nlet options = {};\n\nconst offlineQueue = new OfflineQueue();\nconst asyncHandler = new AsyncHandler();\n\nexport default function (app, config = {}) {\n  const {\n    user,\n    client,\n    appKey,\n    limit = 4,\n    isEnabled,\n    eventPrefix,\n    pattern = \"section:module\",\n    trackOn\n  } = config;\n  enableDirective(app, tracker, untrack);\n  initTelemetry();\n\n  let defaultValues = {};\n\n  function initTelemetry() {\n    if (appKey && isEnabled) {\n      telemetry.init(appKey, { 'cross_subdomain_cookie': false });\n      initDetails();\n      offlineQueue.trackAll(track, options);\n      isTelemetryLoaded = true;\n    }\n    options = { tenant: client, user };\n  }\n\n  function initDetails() {\n    telemetry.identify(user);\n    telemetry.people.set({ $name: user });\n    telemetry.register({\n      tenant: client,\n      user: user\n    });\n  }\n\n  let patternArr = pattern\n    .split(\":\")\n    .map((item) => \"cy\" + item.charAt(0).toUpperCase() + item.slice(1));\n  const trackKey = trackOn || patternArr[0];\n\n  function handleClick(event) {\n    if (event.$handled) return;\n    const path = event?.composedPath?.() || event.path;\n    let doTrack = false,\n      payload = null;\n    let dataset = path.reduce((acc, item, index) => {\n      const hasAttrPattern = patternArr.some((pattern) =>\n        Object.keys(item?.dataset || {}).includes(pattern)\n      );\n      payload = !payload ? item?.dataset?.cyProperties : payload;\n      doTrack = !doTrack ? Boolean(item?.dataset?.[trackKey]) : doTrack;\n      return index < limit && hasAttrPattern\n        ? { ...acc, ...(item?.dataset || {}) }\n        : acc;\n    }, {});\n    if (dataset && doTrack) {\n      event.$handled = true;\n      if (payload) track({ ...defaultValues, ...dataset }, JSON.parse(payload));\n      else track({ ...defaultValues, ...dataset });\n    }\n  }\n\n  function registerEvent(el) {\n    untrack(el);\n    el.addEventListener(\"click\", handleClick, true);\n  }\n\n  function tracker(el, values) {\n    defaultValues = values || {};\n    Object.entries(defaultValues).forEach(([key, value]) =>\n      el.setAttribute(`data-cy-${key}`, value)\n    );\n    registerEvent(el);\n  }\n\n  function untrack(el) {\n    el.removeEventListener(\"click\", handleClick);\n  }\n\n  function resolveHandler(id, { status, ...properties }) {\n    const pattern = asyncHandler.pop(id);\n    if (!pattern) return;\n    const suffix = status ? \"Success\" : \"Error\";\n    const trackOptions = {\n      ...options,\n      ...properties,\n      status: suffix\n    };\n    if(isTelemetryLoaded) telemetry.track(`${pattern}:${suffix}`, trackOptions);\n    else offlineQueue.push(`${pattern}:${suffix}`, trackOptions);\n  }\n\n  function $validate(id, validate) {\n    return new Promise((resolve) => {\n      if (typeof validate === \"function\") {\n        validate((status, errors) => {\n          if (!status) resolveHandler(id, { status, errors });\n          resolve({ status, errors });\n        });\n      } else {\n        resolveHandler(id, validate);\n        asyncHandler.delete(id);\n      }\n    });\n  }\n\n  function track(dataset, properties = {}) {\n    const title = patternArr\n      .map((item) => dataset[item])\n      .filter((item) => !!item)\n      .join(\":\");\n    const pushTitle = `${eventPrefix}:${title}`;\n    const trackOptions = {\n      ...options,\n      ...properties\n    };\n    if (dataset[\"cyId\"]) asyncHandler.push(dataset[\"cyId\"], pushTitle);\n    if(isTelemetryLoaded) telemetry.track(pushTitle, trackOptions);\n    else offlineQueue.push(pushTitle, trackOptions);\n  }\n  return { track, $validate };\n}\n\nfunction enableDirective(app, tracker, untrack) {\n  app.directive(\"cy-tracker\", {\n    beforeMount(el, binding) {\n      tracker(el, binding.value);\n    },\n    unmounted(el) {\n      untrack(el);\n    }\n  });\n}\n"],"names":["isTelemetryLoaded","options","offlineQueue","OfflineQueue","asyncHandler","AsyncHandler","index","app","config","user","client","appKey","limit","isEnabled","eventPrefix","pattern","trackOn","enableDirective","tracker","untrack","initTelemetry","defaultValues","telemetry","initDetails","track","patternArr","item","trackKey","handleClick","event","path","doTrack","payload","dataset","acc","hasAttrPattern","registerEvent","el","values","key","value","resolveHandler","id","status","properties","suffix","trackOptions","$validate","validate","resolve","errors","title","pushTitle","binding"],"mappings":"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"}