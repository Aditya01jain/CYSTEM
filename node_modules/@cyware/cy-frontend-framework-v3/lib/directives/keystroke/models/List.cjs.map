{"version":3,"file":"List.cjs","sources":["../../../../src/directives/keystroke/models/List.js"],"sourcesContent":["import { KEYBOARD_EVENTS } from \"../../../utilities/constants\";\nimport ariaUtils from \"../../../utilities/aria-utils\";\n\nconst getAttribute = (element, key, equateValue = \"true\") => {\n  return element?.getAttribute(key, false) === equateValue;\n};\nconst OBSERVER_MODEL = { childList: true, subtree: true, attributes: true };\n\nclass ListModel {\n  constructor(el, options = {}) {\n    this.el = el;\n    this.lists = [];\n    this.initAttributes();\n    this.initBindListeners();\n    this.initEvents();\n    this.options = options;\n    this.observer = new MutationObserver(this.oberservable.bind(this));\n    this.observer.observe(this.el, OBSERVER_MODEL);\n  }\n  initAttributes() {\n    this.isFocusTabChild = getAttribute(this.el, \"focus-tab-child\");\n    this.skipLevelFocus = getAttribute(this.el, \"skip-level-focus\");\n    this.activeClass = this.el.getAttribute(\"activeClass\");\n  }\n  initBindListeners() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleBlurEvent = this.handleBlurEvent.bind(this);\n    this.handleListKeyFocus = this.handleListKeyFocus.bind(this);\n  }\n  handleListKeyFocus(event, element) {\n    const key = event.which || event.keyCode;\n    if (!isTab(event) || KEYBOARD_EVENTS.DOWN !== key) return;\n    if (element.contains(document.activeElement)) return;\n    ariaUtils.preventEvents(event);\n    element?.children?.[0]?.setAttribute(\"tabindex\", 0);\n    ariaUtils.attemptFocus(element?.children?.[0]);\n  }\n  oberservable(mutationList) {\n    for (const { type, attributeName } of mutationList) {\n      if (type === \"childList\") this.initializeSubNodes();\n      else if (type === \"attributes\" && attributeName === \"cy-data-list\")\n        this.initSubNodes();\n    }\n  }\n  initEvents() {\n    this.el.addEventListener(\"keydown\", this.handleKeyDown);\n    this.activeClass = this.el.getAttribute(\"activeClass\");\n    this.initializeSubNodes();\n  }\n  initSubNodes() {\n    let newList = [];\n    if (getAttribute(this.el, \"cy-data-list\")) newList = [this.el];\n    else newList = Array.from(this.el.querySelectorAll(\"[cy-data-list]\"));\n    this.lists = [...newList];\n    if (this.lists?.length > 1) this.addTabIndex();\n    // this.lists.forEach((node) => {\n    //   node.addEventListener(\"keydown\", (event) =>\n    //     this.handleListKeyFocus(event, node)\n    //   );\n    // });\n  }\n  addTabIndex() {\n    this.lists.forEach((list) => list.setAttribute(\"tabindex\", 0));\n  }\n  initializeSubNodes() {\n    this.initSubNodes();\n  }\n  removeEvents() {\n    this.observer.disconnect();\n    this.el.removeEventListener(\"keydown\", this.handleKeyDown);\n    // this.lists.forEach((node) => {\n    //   node.removeEventListener(\"keydown\", (event) =>\n    //     this.handleListKeyFocus(event, node)\n    //   );\n    // });\n    if (this.isFocusTabChild) return;\n  }\n  handleBlurEvent(e) {\n    e?.target.classList.remove(this.activeClass);\n  }\n\n  getTargetElement(event, target) {\n    if (target) return target;\n    let targetNode = event?.target;\n    let parentNode = targetNode?.parentElement;\n    while (parentNode !== this.el) {\n      if (parentNode?.getAttribute(\"cy-data-list\")) break;\n      targetNode = parentNode;\n      parentNode = targetNode?.parentElement;\n    }\n\n    return targetNode;\n  }\n\n  updateNodeClass(element, prevElement) {\n    prevElement?.removeEventListener(\"blur\", this.handleBlurEvent);\n    element.addEventListener(\"blur\", this.handleBlurEvent);\n  }\n\n  isNodeFocus(element, event) {\n    const isDisabled = getAttribute(element, \"disabled\");\n    if (isDisabled) return false;\n    const isFocusable = ariaUtils.isFocusable(element);\n    if (!this.skipLevelFocus) {\n      const prevElement = event?.target;\n      element?.setAttribute(\"tabindex\", 0);\n      if (this.activeClass?.length) this.updateNodeClass(element, prevElement);\n      return ariaUtils.attemptFocus(element);\n    }\n    if (!isFocusable) return ariaUtils.focusFirstDescendant(element);\n    ariaUtils.attemptFocus(element);\n    return isFocusable;\n  }\n\n  findNextFocusable(element, type, target) {\n    let elementSibling = this.getTargetElement(element, target)[\n      `${type}ElementSibling`\n    ];\n    if (elementSibling) {\n      let isFocused = this.isNodeFocus(elementSibling, element, type);\n      while (!isFocused && elementSibling[`${type}ElementSibling`]) {\n        elementSibling = elementSibling[`${type}ElementSibling`];\n        isFocused = this.isNodeFocus(elementSibling, element, type);\n      }\n      if (isFocused && document?.activeElement && this.activeClass?.length) {\n        document?.activeElement.classList.add(this.activeClass);\n      }\n    }\n  }\n\n  handleEnter() {\n    document.activeElement.click();\n  }\n  focusPrevElement(e, target) {\n    this.findNextFocusable(e, \"previous\", target);\n  }\n  focusNextElement(e, target) {\n    this.findNextFocusable(e, \"next\", target);\n  }\n\n  initFocus(element) {\n    const isFocusable = ariaUtils.isFocusable(element);\n    if (!isFocusable) return ariaUtils.focusFirstDescendant(element);\n    element?.focus();\n  }\n\n  handleKeyDown(event) {\n    const getTargetNode = () => {\n      let currNode = event.target?.parentElement;\n      let prevElement;\n      while (currNode && currNode !== this.el) {\n        prevElement = currNode;\n        currNode = currNode?.parentElement;\n      }\n      return prevElement;\n    };\n    const isInside = this.el.contains(event?.target);\n    const isList = this.lists.some((node) => node.contains(event.target));\n    const key = event.which || event.keyCode;\n    let targetNode;\n    if (isList) targetNode = getTargetNode();\n    if (KEYBOARD_EVENTS.UP === key && isList) {\n      this.focusPrevElement(event);\n    } else if (KEYBOARD_EVENTS.DOWN === key && isList) {\n      this.focusNextElement(event);\n    } else if (KEYBOARD_EVENTS.LEFT === key && isInside) {\n      this.focusPrevElement(event, targetNode);\n    } else if (KEYBOARD_EVENTS.RIGHT === key && isInside) {\n      this.focusNextElement(event, targetNode);\n    } else if (KEYBOARD_EVENTS.ENTER.includes(key)) {\n      this.handleEnter();\n    }\n  }\n}\n\nexport default ListModel;\n"],"names":["getAttribute","element","key","equateValue","OBSERVER_MODEL","ListModel","el","options","event","KEYBOARD_EVENTS","ariaUtils","mutationList","type","attributeName","newList","list","e","target","targetNode","parentNode","prevElement","isFocusable","elementSibling","isFocused","getTargetNode","currNode","isInside","isList","node"],"mappings":"+MAGMA,EAAe,CAACC,EAASC,EAAKC,EAAc,SACzCF,GAAS,aAAaC,EAAK,EAAK,IAAMC,EAEzCC,EAAiB,CAAE,UAAW,GAAM,QAAS,GAAM,WAAY,IAErE,MAAMC,CAAU,CACd,YAAYC,EAAIC,EAAU,GAAI,CAC5B,KAAK,GAAKD,EACV,KAAK,MAAQ,GACb,KAAK,eAAc,EACnB,KAAK,kBAAiB,EACtB,KAAK,WAAU,EACf,KAAK,QAAUC,EACf,KAAK,SAAW,IAAI,iBAAiB,KAAK,aAAa,KAAK,IAAI,CAAC,EACjE,KAAK,SAAS,QAAQ,KAAK,GAAIH,CAAc,CAC9C,CACD,gBAAiB,CACf,KAAK,gBAAkBJ,EAAa,KAAK,GAAI,iBAAiB,EAC9D,KAAK,eAAiBA,EAAa,KAAK,GAAI,kBAAkB,EAC9D,KAAK,YAAc,KAAK,GAAG,aAAa,aAAa,CACtD,CACD,mBAAoB,CAClB,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,EACjD,KAAK,gBAAkB,KAAK,gBAAgB,KAAK,IAAI,EACrD,KAAK,mBAAqB,KAAK,mBAAmB,KAAK,IAAI,CAC5D,CACD,mBAAmBQ,EAAOP,EAAS,CACjC,MAAMC,EAAMM,EAAM,OAASA,EAAM,QAC7B,CAAC,MAAMA,CAAK,GAAKC,EAAAA,gBAAgB,OAASP,GAC1CD,EAAQ,SAAS,SAAS,aAAa,IAC3CS,UAAU,cAAcF,CAAK,EAC7BP,GAAS,WAAW,CAAC,GAAG,aAAa,WAAY,CAAC,EAClDS,EAAAA,QAAU,aAAaT,GAAS,WAAW,CAAC,CAAC,EAC9C,CACD,aAAaU,EAAc,CACzB,SAAW,CAAE,KAAAC,EAAM,cAAAC,CAAa,IAAMF,EAChCC,IAAS,YAAa,KAAK,mBAAkB,EACxCA,IAAS,cAAgBC,IAAkB,gBAClD,KAAK,aAAY,CAEtB,CACD,YAAa,CACX,KAAK,GAAG,iBAAiB,UAAW,KAAK,aAAa,EACtD,KAAK,YAAc,KAAK,GAAG,aAAa,aAAa,EACrD,KAAK,mBAAkB,CACxB,CACD,cAAe,CACb,IAAIC,EAAU,CAAA,EACVd,EAAa,KAAK,GAAI,cAAc,EAAGc,EAAU,CAAC,KAAK,EAAE,EACxDA,EAAU,MAAM,KAAK,KAAK,GAAG,iBAAiB,gBAAgB,CAAC,EACpE,KAAK,MAAQ,CAAC,GAAGA,CAAO,EACpB,KAAK,OAAO,OAAS,GAAG,KAAK,aAMlC,CACD,aAAc,CACZ,KAAK,MAAM,QAASC,GAASA,EAAK,aAAa,WAAY,CAAC,CAAC,CAC9D,CACD,oBAAqB,CACnB,KAAK,aAAY,CAClB,CACD,cAAe,CACb,KAAK,SAAS,aACd,KAAK,GAAG,oBAAoB,UAAW,KAAK,aAAa,EAMrD,KAAK,eACV,CACD,gBAAgBC,EAAG,CACjBA,GAAG,OAAO,UAAU,OAAO,KAAK,WAAW,CAC5C,CAED,iBAAiBR,EAAOS,EAAQ,CAC9B,GAAIA,EAAQ,OAAOA,EACnB,IAAIC,EAAaV,GAAO,OACpBW,EAAaD,GAAY,cAC7B,KAAOC,IAAe,KAAK,IACrB,CAAAA,GAAY,aAAa,cAAc,GAC3CD,EAAaC,EACbA,EAAaD,GAAY,cAG3B,OAAOA,CACR,CAED,gBAAgBjB,EAASmB,EAAa,CACpCA,GAAa,oBAAoB,OAAQ,KAAK,eAAe,EAC7DnB,EAAQ,iBAAiB,OAAQ,KAAK,eAAe,CACtD,CAED,YAAYA,EAASO,EAAO,CAE1B,GADmBR,EAAaC,EAAS,UAAU,EACnC,MAAO,GACvB,MAAMoB,EAAcX,EAAAA,QAAU,YAAYT,CAAO,EACjD,GAAI,CAAC,KAAK,eAAgB,CACxB,MAAMmB,EAAcZ,GAAO,OAC3B,OAAAP,GAAS,aAAa,WAAY,CAAC,EAC/B,KAAK,aAAa,QAAQ,KAAK,gBAAgBA,EAASmB,CAAW,EAChEV,EAAS,QAAC,aAAaT,CAAO,CACtC,CACD,OAAKoB,GACLX,UAAU,aAAaT,CAAO,EACvBoB,GAFkBX,EAAS,QAAC,qBAAqBT,CAAO,CAGhE,CAED,kBAAkBA,EAASW,EAAMK,EAAQ,CACvC,IAAIK,EAAiB,KAAK,iBAAiBrB,EAASgB,CAAM,EACxD,GAAGL,CAAI,gBACb,EACI,GAAIU,EAAgB,CAClB,IAAIC,EAAY,KAAK,YAAYD,EAAgBrB,EAASW,CAAI,EAC9D,KAAO,CAACW,GAAaD,EAAe,GAAGV,CAAI,gBAAgB,GACzDU,EAAiBA,EAAe,GAAGV,CAAI,gBAAgB,EACvDW,EAAY,KAAK,YAAYD,EAAgBrB,EAASW,CAAI,EAExDW,GAAa,UAAU,eAAiB,KAAK,aAAa,QAC5D,UAAU,cAAc,UAAU,IAAI,KAAK,WAAW,CAEzD,CACF,CAED,aAAc,CACZ,SAAS,cAAc,OACxB,CACD,iBAAiBP,EAAGC,EAAQ,CAC1B,KAAK,kBAAkBD,EAAG,WAAYC,CAAM,CAC7C,CACD,iBAAiBD,EAAGC,EAAQ,CAC1B,KAAK,kBAAkBD,EAAG,OAAQC,CAAM,CACzC,CAED,UAAUhB,EAAS,CAEjB,GAAI,CADgBS,EAAAA,QAAU,YAAYT,CAAO,EAC/B,OAAOS,EAAS,QAAC,qBAAqBT,CAAO,EAC/DA,GAAS,MAAK,CACf,CAED,cAAcO,EAAO,CACnB,MAAMgB,EAAgB,IAAM,CAC1B,IAAIC,EAAWjB,EAAM,QAAQ,cACzBY,EACJ,KAAOK,GAAYA,IAAa,KAAK,IACnCL,EAAcK,EACdA,EAAWA,GAAU,cAEvB,OAAOL,CACb,EACUM,EAAW,KAAK,GAAG,SAASlB,GAAO,MAAM,EACzCmB,EAAS,KAAK,MAAM,KAAMC,GAASA,EAAK,SAASpB,EAAM,MAAM,CAAC,EAC9DN,EAAMM,EAAM,OAASA,EAAM,QACjC,IAAIU,EACAS,IAAQT,EAAaM,KACrBf,kBAAgB,KAAOP,GAAOyB,EAChC,KAAK,iBAAiBnB,CAAK,EAClBC,EAAe,gBAAC,OAASP,GAAOyB,EACzC,KAAK,iBAAiBnB,CAAK,EAClBC,EAAe,gBAAC,OAASP,GAAOwB,EACzC,KAAK,iBAAiBlB,EAAOU,CAAU,EAC9BT,EAAe,gBAAC,QAAUP,GAAOwB,EAC1C,KAAK,iBAAiBlB,EAAOU,CAAU,EAC9BT,EAAAA,gBAAgB,MAAM,SAASP,CAAG,GAC3C,KAAK,YAAW,CAEnB,CACH"}