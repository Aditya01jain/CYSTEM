{"version":3,"file":"useRowPreview.cjs","sources":["../../../../src/components/table/composables/useRowPreview.js"],"sourcesContent":["import { isRef, ref, toRefs } from \"vue\";\n\nexport default (options) => {\n  const props = isRef(options) ? toRefs(options) : options;\n\n  const expandedRows = ref([]);\n  const previewStyle = ref({ width: \"\" });\n\n  function setPreviewStyle(el) {\n    const offset = el?.clientWidth;\n    if (offset) previewStyle.value = { width: `${offset}px` };\n  }\n\n  function isRowExpanded(row = {}) {\n    const rowIdentifier = props?.tableConfig?.rowIdentifier;\n    return expandedRows.value.findIndex(\n      (data) => row?.[rowIdentifier] === data?.[rowIdentifier]\n    );\n  }\n\n  function addRowClass(row) {\n    if (typeof props.rowClass === \"function\") return props.rowClass(row);\n    return props.rowClass;\n  }\n\n  function rowClassName({ row = {} }) {\n    const classNames = [\"cyw-table-row\"];\n    classNames.push(props.$attrs?.[\"row-class-name\"] || \"\");\n    if (props.rowClass) classNames.push(addRowClass(row));\n    if (isRowExpanded(row) !== -1)\n      classNames.push(...[\"cyw-table-row__preview\"]);\n    if (props.disableRowIf?.(row)) classNames.push(\"cyw-table-row--disabled\");\n    return classNames.join(\" \");\n  }\n\n  function expandRow(row, elTable) {\n    const isMultiple = props?.tableConfig?.multipleRowExpansion;\n    const rowIdentifier = props?.tableConfig?.rowIdentifier;\n\n    if (!isMultiple && expandedRows.value.length)\n      if (row?.[rowIdentifier] !== expandedRows.value?.[0]?.[rowIdentifier])\n        elTable.value.toggleRowExpansion(expandedRows.value[0]);\n    const index = isRowExpanded(row);\n    if (index === -1)\n      expandedRows.value = isMultiple ? expandedRows.value.concat(row) : [row];\n    else {\n      if (isMultiple) expandedRows.value.splice(index, 1);\n      else expandedRows.value = [];\n    }\n    elTable.value.toggleRowExpansion(row);\n  }\n\n  function setExpandedRows(newValue) {\n    expandRow.value = newValue;\n  }\n\n  return {\n    expandedRows,\n    previewStyle,\n    setPreviewStyle,\n    isRowExpanded,\n    rowClassName,\n    expandRow,\n    setExpandedRows\n  };\n};\n"],"names":["useRowPreview","options","props","isRef","toRefs","expandedRows","ref","previewStyle","setPreviewStyle","el","offset","isRowExpanded","row","rowIdentifier","data","addRowClass","rowClassName","classNames","expandRow","elTable","isMultiple","index","setExpandedRows","newValue"],"mappings":"mIAEeA,EAACC,GAAY,CAC1B,MAAMC,EAAQC,EAAAA,MAAMF,CAAO,EAAIG,EAAAA,OAAOH,CAAO,EAAIA,EAE3CI,EAAeC,MAAI,CAAA,CAAE,EACrBC,EAAeD,EAAG,IAAC,CAAE,MAAO,EAAI,CAAA,EAEtC,SAASE,EAAgBC,EAAI,CAC3B,MAAMC,EAASD,GAAI,YACfC,IAAQH,EAAa,MAAQ,CAAE,MAAO,GAAGG,CAAM,MACpD,CAED,SAASC,EAAcC,EAAM,GAAI,CAC/B,MAAMC,EAAgBX,GAAO,aAAa,cAC1C,OAAOG,EAAa,MAAM,UACvBS,GAASF,IAAMC,CAAa,IAAMC,IAAOD,CAAa,CAC7D,CACG,CAED,SAASE,EAAYH,EAAK,CACxB,OAAI,OAAOV,EAAM,UAAa,WAAmBA,EAAM,SAASU,CAAG,EAC5DV,EAAM,QACd,CAED,SAASc,EAAa,CAAE,IAAAJ,EAAM,CAAA,GAAM,CAClC,MAAMK,EAAa,CAAC,eAAe,EACnC,OAAAA,EAAW,KAAKf,EAAM,SAAS,gBAAgB,GAAK,EAAE,EAClDA,EAAM,UAAUe,EAAW,KAAKF,EAAYH,CAAG,CAAC,EAChDD,EAAcC,CAAG,IAAM,IACzBK,EAAW,KAAS,wBAAyB,EAC3Cf,EAAM,eAAeU,CAAG,GAAGK,EAAW,KAAK,yBAAyB,EACjEA,EAAW,KAAK,GAAG,CAC3B,CAED,SAASC,EAAUN,EAAKO,EAAS,CAC/B,MAAMC,EAAalB,GAAO,aAAa,qBACjCW,EAAgBX,GAAO,aAAa,cAEtC,CAACkB,GAAcf,EAAa,MAAM,QAChCO,IAAMC,CAAa,IAAMR,EAAa,QAAQ,CAAC,IAAIQ,CAAa,GAClEM,EAAQ,MAAM,mBAAmBd,EAAa,MAAM,CAAC,CAAC,EAC1D,MAAMgB,EAAQV,EAAcC,CAAG,EAC3BS,IAAU,GACZhB,EAAa,MAAQe,EAAaf,EAAa,MAAM,OAAOO,CAAG,EAAI,CAACA,CAAG,EAEnEQ,EAAYf,EAAa,MAAM,OAAOgB,EAAO,CAAC,EAC7ChB,EAAa,MAAQ,GAE5Bc,EAAQ,MAAM,mBAAmBP,CAAG,CACrC,CAED,SAASU,EAAgBC,EAAU,CACjCL,EAAU,MAAQK,CACnB,CAED,MAAO,CACL,aAAAlB,EACA,aAAAE,EACA,gBAAAC,EACA,cAAAG,EACA,aAAAK,EACA,UAAAE,EACA,gBAAAI,CACJ,CACA"}