"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const h=require("sortablejs"),d=require("../../../utilities/shared.cjs"),l={ghost:"sortable-ghost",chosen:"sortable-chosen",drag:"sortable-drag",hover:"hover-row"};function r(o,e){Object.entries(e).forEach(([t,s])=>{const i=s?"add":"remove";o?.classList?.[i](l?.[t])})}class c{lastTargetIndex=-1;constructor(e){this._self=e,this.initTargetElements(),this.init()}destroy(){this.sortable&&(this.lastTargetIndex=-1,this.sortable.destroy(),this.sortable=null)}initTargetElements(){this.sortableElement=this._self.el?.querySelector(".el-table__fixed-body-wrapper tbody");const e=this._self.el?.querySelector(".el-table__body-wrapper tbody");this.isFixed=!d.isNull(this.sortableElement),this.sortableElement?this.wrapperTable=e:this.sortableElement=e}init(){if(!this.sortableElement)return;this.sortable&&this.destroy();let e={};this.isFixed&&(e={onChoose:this.onChoose.bind(this),onChange:this.onChange.bind(this)}),this.sortable=h.create(this.sortableElement,{handle:".cyw-row-dragger",animation:300,ghostClass:l.ghost,chosenClass:l.chosen,dragClass:l.drag,delay:0,onStart:this.onStart.bind(this),onEnd:this.onEnd.bind(this),...e})}reinit(){this.destroy(),this._self.nextTick(()=>{this.initTargetElements(),this.init()})}onStart(e){const t=e?.oldIndex;if(this.isFixed){const s=this.wrapperTable?.children?.[t];r(this.sortableElement?.children?.[t],{hover:!1}),r(s,{drag:!1,ghost:!0,hover:!1})}this._self.$emits("rowDragStart",{rowIndex:e?.rowIndex,event:e})}onEnd(e){const{newIndex:t,oldIndex:s}=e;if(this.isFixed){const n=this.wrapperTable?.children?.[t];r(this.wrapperTable?.children?.[s],{hover:!1}),this._self.nextTick(()=>r(n,{ghost:!1,chosen:!1,drag:!1}))}const i=this._self?.data||[],a=i.splice(s,1)[0];i.splice(t,0,a),this.lastTargetIndex=-1,this._self.$emits("rowDragEnd",{row:this._self.data[t],targetRow:a,data:i,newIndex:t,oldIndex:s,event:e})}onChoose(e){const t=e?.oldIndex,s=this.wrapperTable?.children?.[t];r(this.sortableElement?.children?.[t],{hover:!1}),r(s,{chosen:!0,hover:!1})}onChange(e){const{newIndex:t,oldIndex:s}=e;if(this.lastTargetIndex===t)return;this.lastTargetIndex==-1&&(this.lastTargetIndex=s);const i=this.wrapperTable?.children?.[this.lastTargetIndex],a=this.wrapperTable?.children?.[t];this.lastTargetIndex>=0&&(r(this.sortableElement?.children[this.lastTargetIndex],{hover:!1}),r(i,{chosen:!1,ghost:!1,hover:!1})),r(a,{ghost:!0,chosen:!0,hover:!1}),this.lastTargetIndex=t}}exports.default=c;
//# sourceMappingURL=RowDraggable.cjs.map
