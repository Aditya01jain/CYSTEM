{"version":3,"file":"froala.comment.cjs","sources":["../../../src/plugins/custom-froala/froala.comment.js"],"sourcesContent":["import FroalaEditor from \"froala-editor\";\n\nconst EMPTY_SELECTION_TEXT = \n\"Select text to put a comment.\";\n\nconst POPUP_STYLE = \n\"font-size: 1.4rem; padding: 2rem; max-width: 20rem; word-break: break-word\";\n\nFroalaEditor.POPUP_TEMPLATES[\"comment.popup\"] = \"[_CUSTOM_LAYER_]\";\n\nFroalaEditor.PLUGINS.comment = function (editor) {\n  const onClickSpan = (event) => {\n    const isFullScreen = editor.fullscreen.isActive();\n    \n    if (event.target?.dataset?.commentid) {\n      const spanPosition = getSpanPosition(event.target, editor, isFullScreen);\n      editor.opts.callback({\n        type: \"click\",\n        spanId: event.target.dataset.commentid,\n        position: {\n          top: spanPosition.relativeTop,\n          right: spanPosition.relativeRight\n        },\n        isFullScreen: isFullScreen\n      });\n    } else if (event.target.parentElement?.dataset?.commentid) {\n      const spanPosition = getSpanPosition(event.target.parentElement, editor, isFullScreen);\n      editor.opts.callback({\n        type: \"click\",\n        spanId: event.target.parentElement.dataset.commentid,\n        position: {\n          top: spanPosition.relativeTop,\n          right: spanPosition.relativeRight\n        },\n        isFullScreen: isFullScreen\n      });\n    }\n  };\n\n  editor.events.on('click', onClickSpan);\n\n\n  const apply = () => {\n    const selection = window.getSelection();\n    if (selection.rangeCount > 0) {\n      editor.format.apply('span', { 'data-commentid': 'select-comment' });\n\n      let lastSpan = editor.$el.find('span[data-commentid=\"select-comment\"]').last();\n      if (lastSpan.length > 0) {\n        let editorHtml = editor?.html?.get()?.trim(); // Get the entire editor content (HTML)\n        let lastSpanHtml = lastSpan?.html()?.trim();  // Extract inner HTML of lastSpan\n\n        // Remove HTML tags to compare plain text\n        let editorText = editorHtml.replace(/<[^>]*>/g, \"\").trim();\n        let lastSpanText = lastSpanHtml?.replace(/<[^>]*>/g, \"\")?.trim();\n\n        // Check if the entire editor content ends with the last span's text\n        let isLastContent = editorText?.endsWith(lastSpanText);\n\n        if (isLastContent) {\n          lastSpan.after(\"\\u00A0\");\n        }\n        editor.undo.saveStep();\n      }\n    }\n\n    const insertedSpan = editor.$el\n      .find('[data-commentid=\"select-comment\"]')\n      .last();\n\n    // Check if the span exists (in case the selection was empty or not inserted)\n    if (insertedSpan.length > 0) {\n      const isFullScreen = editor.fullscreen.isActive();\n      const spanPosition = getSpanPosition(insertedSpan[0], editor, isFullScreen);\n      if (editor.opts.callback) {\n        editor.opts.callback({\n          type: \"add\",\n          position: {\n            top: spanPosition.relativeTop,\n            right: spanPosition.relativeRight\n          },\n          isFullScreen: isFullScreen\n        });\n      }\n    }\n  };\n\n\n  const getSpanPosition = (insertedSpan, editor, isFullScreen) => {    \n    if (!insertedSpan || !editor) return { relativeTop: 0, relativeRight: 0 };\n    const spanRect = insertedSpan.getBoundingClientRect();\n    const editorContainer = editor.$el?.[0]?.parentElement;\n    const containerRect = editorContainer?.getBoundingClientRect();\n    if (!spanRect || !containerRect) return { relativeTop: 0, relativeRight: 0 };\n\n    const rootFontSize = parseFloat(getComputedStyle(document.documentElement).fontSize);\n\n    // Constants for UI offsets\n    const TOOLBAR_OFFSET = 4;\n    const WIDTH_OFFSET = 40;\n    const spanTop = spanRect.top / rootFontSize;\n    const spanBottom = spanRect.bottom / rootFontSize;\n    const spanHeight = spanRect.height / rootFontSize;\n    const spanRight = spanRect.right / rootFontSize;\n    \n    const containerTop = containerRect.top / rootFontSize;\n    const containerHeight = containerRect.height / rootFontSize;\n    const containerRight = containerRect.right / rootFontSize;\n    if(!isFullScreen) {  \n      // Calculate relative top position\n      const relativeTop = spanHeight > containerHeight \n          ? containerHeight\n          : (spanTop - containerTop) + Math.max(spanHeight, TOOLBAR_OFFSET);\n  \n      // Calculate relative right position\n      const relativeRight = spanRight < (containerRight - WIDTH_OFFSET) \n          ? (containerRight - spanRight - WIDTH_OFFSET) \n          : 0;\n  \n      return { relativeTop, relativeRight };\n    } else {\n      const parentElement = editor.$el?.[0].parentElement;\n      \n      const fullScreenElement = parentElement?.getBoundingClientRect();\n      const fullScreenElementHeight = fullScreenElement.height / rootFontSize;\n      const fullScreenElementRight = fullScreenElement.right / rootFontSize;\n      \n      const relativeTop = spanHeight > (fullScreenElementHeight  - (2 * TOOLBAR_OFFSET))\n          ? fullScreenElementHeight - (2 * TOOLBAR_OFFSET)\n          : spanBottom\n      // Calculate relative right position\n      const relativeRight = spanRight < (fullScreenElementRight - WIDTH_OFFSET) \n          ? (fullScreenElementRight - spanRight  - WIDTH_OFFSET) \n          : 0;     \n          \n      return { relativeTop, relativeRight };\n    }\n};\n\n  const initPopup = () => {\n    const template = {\n      custom_layer: `<div style=\"${POPUP_STYLE}\">${EMPTY_SELECTION_TEXT}</div>`\n    };\n    return editor.popups.create(\"comment.popup\", template);\n  };\n  const showPopup = () => {\n    let $popup = editor.popups.get(\"comment.popup\");\n    if (!$popup) initPopup();\n    editor.popups.setContainer(\"comment.popup\", editor.$tb);\n    editor.popups.refresh(\"comment.popup\");\n    const $btn = editor.$tb.find('.fr-command[data-cmd=\"comment\"]');\n    const left = $btn.offset().left - 10;\n    const top =\n      $btn.offset().top +\n      (editor.opts.toolbarBottom ? 10 : $btn.outerHeight() - 10);\n    editor.popups.show(\"comment.popup\", left, top, $btn.outerHeight());\n  };\n\n  return {\n    apply: apply,\n    showPopup: showPopup\n  };\n};\n\nFroalaEditor.DefineIconTemplate(\n  \"cyware-comment\",\n  '<i class=\"cy-flex-center cy-text-f18 cyicon-comment\"></i>'\n);\n\nFroalaEditor.DefineIcon(\"commentIcon\", {\n  NAME: \"commentIcon\",\n  template: \"cyware-comment\"\n});\n\nFroalaEditor.RegisterCommand(\"comment\", {\n  title: \"Comment\",\n  icon: \"commentIcon\",\n  undo: true,\n  focus: true,\n  refreshAfterCallback: true,\n  callback: function () {\n    const isSelected = !this.selection.isCollapsed();\n    isSelected ? this.comment.apply() : this.comment.showPopup();\n  }\n});\n\n"],"names":["EMPTY_SELECTION_TEXT","POPUP_STYLE","FroalaEditor","editor","onClickSpan","event","isFullScreen","spanPosition","getSpanPosition","apply","lastSpan","editorHtml","lastSpanHtml","editorText","lastSpanText","insertedSpan","spanRect","containerRect","rootFontSize","TOOLBAR_OFFSET","WIDTH_OFFSET","spanTop","spanBottom","spanHeight","spanRight","containerTop","containerHeight","containerRight","fullScreenElement","fullScreenElementHeight","fullScreenElementRight","relativeTop","relativeRight","initPopup","template","$btn","left","top"],"mappings":"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"}