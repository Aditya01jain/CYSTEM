@function convert-to-css-variable($key: "cy", $subkey1: null, $subkey2: null) {
  @if $subkey1 != null and $subkey2 != null {
    @return "--#{$key}#{$subkey1}#{$subkey2}";
  } @else if $subkey2 == null and $subkey1 != null {
    @return "--#{$key}#{$subkey1}";
  } @else {
    @return "--#{$key}";
  }
}

@function get-hue($map) {
  $h: map-get($map, h);
  @if $h {
    @return $h;
  } @else {
    @return map-get($primary, h);
  }
}

@function cy-color($key) {
  @return var(--#{$key});
}

@function alpha($key, $opacity) {
  $color: cy-color($key);
  $color: str-replace($color, "var(");
  $color: str-replace($color, ")");
  $color-h: var(#{$color + "-h"});
  $color-s: var(#{$color + "-s"});
  $color-l: var(#{$color + "-l"});
  @return hsla($color-h, $color-s, $color-l, $opacity);
}

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }
  @return $string;
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}
